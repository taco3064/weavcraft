name: CI main

on:
  pull_request:
    branches:
      - main

jobs:
  ci-with-nx:
    name: CI with NX
    runs-on: ubuntu-latest
    environment: actions
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: 'setSHAs'
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: main

      - name: Install dependencies
        run: npm ci

      - name: Run NX lint, test, and tsc
        run: |
          npx nx affected \
            --target=lint,tsc,test \
            --base=${{ steps.setSHAs.outputs.base }} \
            --head=${{ steps.setSHAs.outputs.head }}

  get-affected-projects:
    name: Get affected projects
    needs: ci-with-nx
    uses: ./.github/workflows/affected-projects.yml
    with:
      main_branch_name: main
    secrets:
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

  sonarqube-scan:
    name: Scan Projects
    needs: get-affected-projects
    uses: ./.github/workflows/sonar-scan-projects.yml
    with:
      api_affected_count: ${{needs.get-affected-projects.outputs.api}}
      web_affected_count: ${{needs.get-affected-projects.outputs.web}}
      core_affected_count: ${{needs.get-affected-projects.outputs.core}}
    secrets:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_API_TOKEN: ${{ secrets.SONAR_API_TOKEN }}
      SONAR_WEB_TOKEN: ${{ secrets.SONAR_WEB_TOKEN }}
      SONAR_LIBS_TOKEN: ${{ secrets.SONAR_LIBS_TOKEN }}

  preview-with-vercel:
    name: CI preview with vercel
    runs-on: ubuntu-latest
    environment: actions
    needs:
      - get-affected-projects
      - sonarqube-scan
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_TOKEN }}

      - name: Deploy to Vercel
        if: needs.get-affected-projects.outputs.web == '1'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

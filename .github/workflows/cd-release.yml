name: CD Release Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: k8s-weavcraft
    outputs:
      current-version: ${{ steps.version.outputs.current-version }}
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Get Package Version
        id: version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

  release-deploy-k8s:
    name: Deploy local k8s ${{ needs.standard-version.outputs.current-version }}
    needs: release
    uses: ./.github/workflows/deploy-local-k8s.yml
    with:
      version: ${{ needs.standard-version.outputs.current-version }}
    secrets:
      envPAT: ${{ secrets.GIT_TOKEN }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HARBOR_TOKEN: ${{ secrets.HARBOR_TOKEN }}
      ENV_DB_MONGO_URI: ${{ secrets.ENV_DB_MONGO_URI }}
      ENV_PUBLIC_SUPABASE_URL: ${{ secrets.ENV_PUBLIC_SUPABASE_URL }}
      ENV_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.ENV_PUBLIC_SUPABASE_ANON_KEY }}
      ENV_JWT_SECRET: ${{ secrets.ENV_JWT_SECRET }}
      ENV_JWT_EXPIRES_IN: ${{ secrets.ENV_JWT_EXPIRES_IN }}
